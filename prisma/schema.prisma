// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  created_at DateTime? @default(now())
  customer   Customer?
}

model Customer {
  id         Int      @id @default(autoincrement())
  fullname   String
  email      String
  created_at DateTime @default(now())
  user_id    Int?     @unique
  user       User?    @relation(fields: [user_id], references: [id])
}

model Reservation {
  id               Int     @id @default(autoincrement())
  name             String
  email            String
  phone_number     String
  reservation_date String
  reservation_time String
  number_of_people Int
  desc             String?
  desk_id          Int     @unique
  desk             Desk    @relation(fields: [desk_id], references: [id])
}

model Desk {
  id          Int          @id @default(autoincrement())
  name        String
  desc        String
  detail      String
  reservation Reservation?
}

model Category {
  id            Int       @id @default(autoincrement())
  category_name String
  created_at    DateTime  @default(now())
  Product       Product[]
}

model Product {
  id           Int           @id @default(autoincrement())
  product_name String
  price        Int
  desc         String?
  total_sold   Int?
  category_id  Int
  image_url    String?
  created_at   DateTime      @default(now())
  category     Category      @relation(fields: [category_id], references: [id])
  OrderDetail  OrderDetail[]
}

model Order {
  id           Int           @id @default(autoincrement())
  order_number String
  total_price  Int
  order_detail OrderDetail[]
  created_at   DateTime      @default(now())
}

model OrderDetail {
  id         Int      @id @default(autoincrement())
  product_id Int
  order_id   Int
  quantity   Int
  product    Product  @relation(fields: [product_id], references: [id])
  order      Order    @relation(fields: [order_id], references: [id])
  created_at DateTime @default(now())
}
