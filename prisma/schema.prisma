// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  fullname   String
  username   String
  password   String
  created_at DateTime @default(now())
  otp        Otp?
}

model Product {
  id           Int           @id @default(autoincrement())
  product_name String
  price        Int
  equity       Int?
  desc         String?
  is_ready     Boolean?      @default(false)
  category_id  Int
  image_url    String?
  category     Category      @relation(fields: [category_id], references: [id])
  created_at   DateTime      @default(now())
  order        OrderDetail[]
}

model Category {
  id            Int       @id @default(autoincrement())
  category_name String
  desc          String?
  Product       Product[]
}

model Order {
  id               Int           @id @default(autoincrement())
  order_number     String
  customer_name    String
  customer_address String
  payment_method   String
  payment_amount   Int
  created_at       DateTime      @default(now())
  order_detail     OrderDetail[]
}

model OrderDetail {
  id         Int      @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int
  created_at DateTime @default(now())
  order      Order    @relation(fields: [order_id], references: [id])
  product    Product  @relation(fields: [product_id], references: [id])
}

model Otp {
  id        Int      @id @default(autoincrement())
  user_id   Int      @unique
  otp       String
  expiredAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  user      User     @relation(fields: [user_id], references: [id])
}
